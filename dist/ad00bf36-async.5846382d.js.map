{"version":3,"sources":["node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","node_modules/framer-motion/dist/es/render/components/create-factory.mjs","src/components/IconFont/IconFont.tsx","node_modules/@ant-design/icons/es/icons/GiftOutlined.js","node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","node_modules/framer-motion/dist/es/render/utils/setters.mjs","node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","node_modules/framer-motion/dist/es/utils/distance.mjs","node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","node_modules/framer-motion/dist/es/gestures/drag/index.mjs","node_modules/framer-motion/dist/es/gestures/pan/index.mjs","node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","node_modules/framer-motion/dist/es/projection/shared/stack.mjs","node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","node_modules/framer-motion/dist/es/utils/delay.mjs","node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","node_modules/framer-motion/dist/es/projection/styles/transform.mjs","node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","node_modules/framer-motion/dist/es/gestures/hover.mjs","node_modules/framer-motion/dist/es/gestures/focus.mjs","node_modules/framer-motion/dist/es/gestures/press.mjs","node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","node_modules/framer-motion/dist/es/context/LazyContext.mjs","node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","node_modules/framer-motion/dist/es/render/html/use-props.mjs","node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","node_modules/framer-motion/dist/es/utils/use-constant.mjs","node_modules/framer-motion/dist/es/render/html/config-motion.mjs","node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","node_modules/framer-motion/dist/es/render/store.mjs","node_modules/framer-motion/dist/es/render/VisualElement.mjs","node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","node_modules/framer-motion/dist/es/render/components/motion/create.mjs","node_modules/framer-motion/dist/es/motion/features/animations.mjs","node_modules/framer-motion/dist/es/motion/features/gestures.mjs","node_modules/framer-motion/dist/es/motion/features/drag.mjs","node_modules/framer-motion/dist/es/motion/features/layout.mjs","node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","node_modules/framer-motion/dist/es/motion/index.mjs","node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","node_modules/framer-motion/dist/es/motion/features/load-features.mjs","node_modules/framer-motion/dist/es/render/dom/use-render.mjs","node_modules/framer-motion/dist/es/render/svg/use-props.mjs","node_modules/react-tilt/dist/index.js","src/pages/Public/Result/CheckInSuccess.tsx","src/pages/Public/Result/CheckOutSuccess.tsx","src/pages/Public/components/FeedbackForm.tsx","src/pages/Public/ConfirmCheckInEvent.tsx"],"sourcesContent":["import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch (_a) {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","import React from 'react';\n\ntype Props = {\n  name: string;\n  style?: object;\n};\n\n/**\n * Icon Font\n * https://www.iconfont.cn/help/detail?helptype=code\n */\nconst IconFont: React.FC<Props> = ({ name, style }) => (\n  <svg className=\"icon\" aria-hidden=\"true\" style={style}>\n    <use xlinkHref={`#${name}`} />\n  </svg>\n);\n\nexport default IconFont;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport GiftOutlinedSvg from \"@ant-design/icons-svg/es/asn/GiftOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar GiftOutlined = function GiftOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: GiftOutlinedSvg\n  }));\n};\nvar RefIcon = /*#__PURE__*/React.forwardRef(GiftOutlined);\nif (process.env.NODE_ENV !== 'production') {\n  RefIcon.displayName = 'GiftOutlined';\n}\nexport default RefIcon;","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","import { getValueTransition } from 'motion-dom';\nimport { positionalKeys } from '../../render/html/utils/keys-position.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    var _a;\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, (_a = visualElement.latestValues[key]) !== null && _a !== void 0 ? _a : null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    var _a;\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        var _a;\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? (_a = visualElement.presenceContext) === null || _a === void 0 ? void 0 : _a.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget !== null && fallbackTarget !== void 0 ? fallbackTarget : null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        var _a;\n        this.node.animationState.reset();\n        (_a = this.unmountControls) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n}\n\nexport { AnimationFeature };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { capturePointer, isPrimaryPointer } from 'motion-dom';\nimport { secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, dragSnapToOrigin = false } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            if (event.target instanceof Element &&\n                event.target.hasPointerCapture &&\n                event.pointerId !== undefined) {\n                try {\n                    if (!event.target.hasPointerCapture(event.pointerId)) {\n                        return;\n                    }\n                }\n                catch (e) { }\n            }\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            capturePointer(event, \"release\");\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\" ||\n                event.type === \"lostpointercapture\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        capturePointer(event, \"set\");\n        this.removeListeners = pipe(addPointerEvent(event.currentTarget, \"pointermove\", this.handlePointerMove), addPointerEvent(event.currentTarget, \"pointerup\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"pointercancel\", this.handlePointerUp), addPointerEvent(event.currentTarget, \"lostpointercapture\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { progress } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { setDragLock } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => {\n            var _a;\n            return this.getAnimationState(axis) === \"paused\" &&\n                ((_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.play());\n        });\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        var _a;\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : (_a = this.visualElement.projection) === null || _a === void 0 ? void 0 : _a.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => { var _a; return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.pause(); });\n    }\n    getAnimationState(axis) {\n        var _a;\n        return (_a = this.getAxisMotionValue(axis).animation) === null || _a === void 0 ? void 0 : _a.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { PanSession } from './PanSession.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\nimport { microtask } from '../../../frameloop/microtask.mjs';\nimport { frame } from '../../../frameloop/frame.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { progress, noop } from 'motion-utils';\nimport { circOut } from '../../easing/circ.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { mixNumber } from '../../utils/mix/number.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { getValueTransition } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { cancelFrame, frameData, frameSteps, frame } from '../../frameloop/frame.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { time } from '../../frameloop/sync-time.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mixNumber } from '../../utils/mix/number.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            var _a;\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            var _a;\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if ((_a = this.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            var _a;\n            (_a = this.options.visualElement) === null || _a === void 0 ? void 0 : _a.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            var _a, _b;\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp === null || styleProp === void 0 ? void 0 : styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    var _a;\n    return node !== node.root && ((_a = node.scroll) === null || _a === void 0 ? void 0 : _a.wasRoot);\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = (latestTransform === null || latestTransform === void 0 ? void 0 : latestTransform.z) || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { hover } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { press } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, onUpdate, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    if (onUpdate) {\n        /**\n         * onMount works without the VisualElement because it could be\n         * called before the VisualElement payload has been hydrated.\n         * (e.g. if someone is using m components <m.circle />)\n         */\n        state.onMount = (instance) => onUpdate({ props, current: instance, ...state });\n        state.onUpdate = (visualElement) => onUpdate(visualElement);\n    }\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst layoutProps = [\"x\", \"y\", \"width\", \"height\", \"cx\", \"cy\", \"r\"];\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n        onUpdate: ({ props, prevProps, current, renderState, latestValues, }) => {\n            if (!current)\n                return;\n            let hasTransform = !!props.drag;\n            if (!hasTransform) {\n                for (const key in latestValues) {\n                    if (transformProps.has(key)) {\n                        hasTransform = true;\n                        break;\n                    }\n                }\n            }\n            if (!hasTransform)\n                return;\n            let needsMeasure = !prevProps;\n            if (prevProps) {\n                /**\n                 * Check the layout props for changes, if any are found we need to\n                 * measure the element again.\n                 */\n                for (let i = 0; i < layoutProps.length; i++) {\n                    const key = layoutProps[i];\n                    if (props[key] !==\n                        prevProps[key]) {\n                        needsMeasure = true;\n                    }\n                }\n            }\n            if (!needsMeasure)\n                return;\n            frame.read(() => {\n                updateSVGDimensions(current, renderState);\n                frame.render(() => {\n                    buildSVGAttrs(renderState, latestValues, isSVGTag(current.tagName), props.transformTemplate);\n                    renderSVG(current, renderState);\n                });\n            });\n        },\n    }),\n};\n\nexport { svgMotionConfig };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { time } from '../frameloop/sync-time.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isNumericalString } from '../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../utils/is-zero-value-string.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { complex } from '../value/types/complex/index.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { getAnimatableNone } from './dom/value-types/animatable-none.mjs';\nimport { findValueType } from './dom/value-types/find.mjs';\nimport { transformProps } from './html/utils/keys-transform.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { KeyframeResolver } from './utils/KeyframesResolver.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { frame, cancelFrame } from '../frameloop/frame.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState, onUpdate } = visualState;\n        this.onUpdate = onUpdate;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n        this.onUpdate && this.onUpdate(this);\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        var _a;\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, (_a = this.presenceContext) === null || _a === void 0 ? void 0 : _a.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"12.4.7\", `Attempting to mix Motion versions ${nextValue.version} with 12.4.7 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { VisualElement } from '../VisualElement.mjs';\nimport { DOMKeyframesResolver } from './DOMKeyframesResolver.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","import { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { transformProps } from './utils/keys-transform.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { frame } from '../../frameloop/frame.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { transformProps } from '../html/utils/keys-transform.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { updateSVGDimensions } from './utils/measure.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n        this.updateDimensions = () => {\n            if (this.current && !this.renderState.dimensions) {\n                updateSVGDimensions(this.current, this.renderState);\n            }\n        };\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    onBindTransform() {\n        if (this.current && !this.renderState.dimensions) {\n            frame.postRender(this.updateDimensions);\n        }\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { warnOnce } from '../../utils/warn-once.mjs';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    var _a, _b;\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${(_b = (_a = Component.displayName) !== null && _a !== void 0 ? _a : Component.name) !== null && _b !== void 0 ? _b : \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: (drag === null || drag === void 0 ? void 0 : drag.isEnabled(props)) || (layout === null || layout === void 0 ? void 0 : layout.isEnabled(props))\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","import { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { microtask } from '../../frameloop/microtask.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    var _a, _b;\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !((_a = window.MotionHandoffIsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId)) &&\n        ((_b = window.MotionHasOptimisedAnimation) === null || _b === void 0 ? void 0 : _b.call(window, optimisedAppearId)));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                var _a;\n                (_a = window.MotionHandoffMarkAsComplete) === null || _a === void 0 ? void 0 : _a.call(window, optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","var __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\n// src/index.tsx\nimport React, { Component } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Tilt = class extends Component {\n  constructor(props) {\n    super(props);\n    this.ref = React.createRef();\n    this.state = {\n      style: {}\n    };\n    const defaultSettings = {\n      reverse: false,\n      max: 35,\n      perspective: 1e3,\n      easing: \"cubic-bezier(.03,.98,.52,.99)\",\n      scale: \"1.1\",\n      speed: \"1000\",\n      transition: true,\n      axis: null,\n      reset: true\n    };\n    this.width = null;\n    this.height = null;\n    this.left = null;\n    this.top = null;\n    this.transitionTimeout = null;\n    this.updateCall = null;\n    this.element = null;\n    this.settings = Object.assign({}, defaultSettings, this.props.options);\n    this.reverse = this.settings.reverse ? -1 : 1;\n    this.onMouseEnter = this.onMouseEnter.bind(this, this.props.onMouseEnter);\n    this.onMouseMove = this.onMouseMove.bind(this, this.props.onMouseMove);\n    this.onMouseLeave = this.onMouseLeave.bind(this, this.props.onMouseLeave);\n  }\n  componentDidMount() {\n    this.element = this.ref.current;\n    setTimeout(() => {\n      if (this.element.parentElement.querySelector(\":hover\") === this.element) {\n        this.onMouseEnter();\n      }\n    }, 0);\n  }\n  componentWillUnmount() {\n    clearTimeout(this.transitionTimeout);\n    cancelAnimationFrame(this.updateCall);\n  }\n  onMouseEnter(cb = () => {\n  }, e) {\n    this.updateElementPosition();\n    this.setState(Object.assign({}, this.state, {\n      style: __spreadProps(__spreadValues({}, this.state.style), {\n        willChange: \"transform\"\n      })\n    }));\n    this.setTransition();\n    return cb(e);\n  }\n  reset() {\n    window.requestAnimationFrame(() => {\n      this.setState(Object.assign({}, this.state, {\n        style: __spreadProps(__spreadValues({}, this.state.style), {\n          transform: `perspective(${this.settings.perspective}px) rotateX(0deg) rotateY(0deg) scale3d(1, 1, 1)`\n        })\n      }));\n    });\n  }\n  onMouseMove(cb = () => {\n  }, e) {\n    e.persist();\n    if (this.updateCall !== null) {\n      window.cancelAnimationFrame(this.updateCall);\n    }\n    this.event = e;\n    this.updateCall = requestAnimationFrame(this.update.bind(this, e));\n    return cb(e);\n  }\n  setTransition() {\n    clearTimeout(this.transitionTimeout);\n    this.setState(Object.assign({}, this.state, {\n      style: __spreadProps(__spreadValues({}, this.state.style), {\n        transition: `${this.settings.speed}ms ${this.settings.easing}`\n      })\n    }));\n    this.transitionTimeout = setTimeout(() => {\n      this.setState(Object.assign({}, this.state, {\n        style: __spreadProps(__spreadValues({}, this.state.style), {\n          transition: \"\"\n        })\n      }));\n    }, this.settings.speed);\n  }\n  onMouseLeave(cb = () => {\n  }, e) {\n    this.setTransition();\n    if (this.settings.reset) {\n      this.reset();\n    }\n    return cb(e);\n  }\n  getValues(e) {\n    const x = (e.nativeEvent.clientX - this.left) / this.width;\n    const y = (e.nativeEvent.clientY - this.top) / this.height;\n    const _x = Math.min(Math.max(x, 0), 1);\n    const _y = Math.min(Math.max(y, 0), 1);\n    const tiltX = (this.reverse * (this.settings.max / 2 - _x * this.settings.max)).toFixed(2);\n    const tiltY = (this.reverse * (_y * this.settings.max - this.settings.max / 2)).toFixed(2);\n    const percentageX = _x * 100;\n    const percentageY = _y * 100;\n    return {\n      tiltX,\n      tiltY,\n      percentageX,\n      percentageY\n    };\n  }\n  updateElementPosition() {\n    const rect = this.element.getBoundingClientRect();\n    this.width = this.element.offsetWidth;\n    this.height = this.element.offsetHeight;\n    this.left = rect.left;\n    this.top = rect.top;\n  }\n  update(e) {\n    const values = this.getValues(e);\n    this.setState(Object.assign({}, this.state, {\n      style: __spreadProps(__spreadValues({}, this.state.style), {\n        transform: `perspective(${this.settings.perspective}px) rotateX(${this.settings.axis === \"x\" ? 0 : values.tiltY}deg) rotateY(${this.settings.axis === \"y\" ? 0 : values.tiltX}deg) scale3d(${this.settings.scale}, ${this.settings.scale}, ${this.settings.scale})`\n      })\n    }));\n    this.updateCall = null;\n  }\n  render() {\n    const style = Object.assign({}, this.props.style, this.state.style);\n    return /* @__PURE__ */ jsx(\n      \"div\",\n      {\n        style,\n        ref: this.ref,\n        className: this.props.className,\n        onMouseEnter: this.onMouseEnter,\n        onMouseMove: this.onMouseMove,\n        onMouseLeave: this.onMouseLeave,\n        children: this.props.children\n      }\n    );\n  }\n};\nexport {\n  Tilt\n};\n","import { RenderTime } from '@/helpers';\nimport { CheckCircleOutlined, GiftOutlined } from '@ant-design/icons';\nimport { Button, Card, Flex, List, message, Modal, Tag, Tooltip, Typography } from 'antd';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport { Tilt } from 'react-tilt';\nimport { confirmCheckOut, fetchCheckInInfo } from '../service';\n\ntype Props = {\n  event: EventsModule.Response;\n  check_in_code: string;\n  callback?: (data: { action: string; data?: any }) => void;\n  type: 'check_in' | 'feedback';\n  topBannerImageSrc?: string;\n  mapImageSrc?: string;\n  agendaImageSrc?: string;\n};\n\nconst { Title, Text } = Typography;\n\nconst tiltOptions = {\n  max: 10,\n  scale: 1.05,\n  speed: 400,\n};\n\nconst CheckInSuccess: React.FC<Props> = ({\n  event,\n  check_in_code,\n  callback,\n  type,\n  topBannerImageSrc,\n  mapImageSrc,\n  agendaImageSrc,\n}) => {\n  const [renderData, setRenderData] = useState<PublicModule.CheckInInfo>();\n  const [showCheckout, setshowCheckout] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetchCheckInInfo(check_in_code, event.id)\n      .then(({ data }) => setRenderData(data))\n      .catch((e) => {\n        localStorage.removeItem('activeGuest');\n        window.location.reload();\n      });\n  }, [check_in_code]);\n\n  const handleCheckOut = () => {\n    Modal.confirm({\n      title: 'Are you sure you want to check-out?',\n      content: `This action cannot be undone.`,\n      okText: 'Yes, Check-out',\n      okType: 'danger',\n      cancelText: 'Cancel',\n      onOk: () => {\n        const data = {\n          summit_id: event.id,\n          check_in_code: check_in_code,\n        };\n\n        confirmCheckOut(data).then(() => {\n          //remove in local storage\n          localStorage.removeItem('activeGuest');\n\n          //\n          const storedGuest = localStorage.getItem('checkedInGuest');\n          if (storedGuest) {\n            // Convert the object to a JSON string and store it\n            const parsedData: string[] = JSON.parse(storedGuest);\n            localStorage.setItem(\n              'checkedInGuest',\n              JSON.stringify(parsedData.filter((item) => item !== check_in_code)),\n            );\n          }\n\n          message.success('Check-out successfully!');\n          if (callback) {\n            callback({ action: 'checkout' });\n          }\n        });\n      },\n    });\n  };\n\n  const handleDeleteActiveGuest = () => {\n    //remove in local storage\n    localStorage.removeItem('activeGuest');\n\n    //rediect back\n    if (callback) {\n      callback({ action: 'back' });\n    }\n  };\n\n  const SuccessContent: React.FC<{ type: 'check_in' | 'feedback' }> = ({ type }) => {\n    if (!renderData) return null;\n\n    if (type === 'feedback') {\n      return (\n        <Title level={4} style={{ marginTop: 16, color: '#424242' }}>\n          Your Feedback Form has been successfully submitted. Thank you.\n        </Title>\n      );\n    }\n\n    return (\n      <>\n        <Title level={3} style={{ marginTop: 16, color: '#424242' }}>\n          Check-in Successful!\n        </Title>\n        <Text type=\"secondary\" strong>\n          {event.name}\n        </Text>\n        <div style={{ marginTop: 16, fontSize: 18, fontWeight: 'bold', color: '#2196F3' }}>\n          {RenderTime(renderData.checked_in_at)}\n        </div>\n        <Text type=\"secondary\">{`Welcome ${renderData.full_name}`}</Text>\n      </>\n    );\n  };\n\n  return (\n    <Flex justify=\"center\" wrap gap={'small'} vertical={true}>\n      {topBannerImageSrc ? (\n        <img src={topBannerImageSrc} alt=\"map\" style={{ width: '100%', height: 'auto' }} />\n      ) : null}\n      <Tilt options={tiltOptions}>\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Card\n            style={{\n              textAlign: 'center',\n\n              borderRadius: 16,\n              overflow: 'hidden',\n              boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)',\n            }}\n            loading={!Boolean(renderData)}\n          >\n            <CheckCircleOutlined style={{ fontSize: 48, color: '#52c41a' }} />\n            <SuccessContent type={type} />\n          </Card>\n        </motion.div>\n      </Tilt>\n      {renderData ? (\n        <List\n          header={`Check-in Rooms Status`}\n          bordered\n          dataSource={renderData.rooms}\n          renderItem={(item) => {\n            const room: PublicModule.CheckInInfo['rooms'][0] = item as any;\n            return (\n              <List.Item>\n                <Typography.Text strong>{room.name}</Typography.Text>\n                <span style={{ float: 'right' }}>\n                  {room.is_current ? (\n                    <Tooltip title={'Lucky draw available'}>\n                      <Tag color=\"purple\">{<GiftOutlined />}</Tag>\n                    </Tooltip>\n                  ) : null}{' '}\n                  {room.checked_in_at ? (\n                    <Tooltip title={RenderTime(room.checked_in_at)}>\n                      <Tag color=\"success\">\n                        <CheckCircleOutlined />\n                      </Tag>\n                    </Tooltip>\n                  ) : //  : (\n                  //   <Tag>Not checked-in</Tag>\n                  // )\n                  null}\n                </span>\n              </List.Item>\n            );\n          }}\n        />\n      ) : null}\n      {type === 'check_in' ? (\n        <>\n          {mapImageSrc ? (\n            <img src={mapImageSrc} alt=\"map\" style={{ width: '100%', height: 'auto' }} />\n          ) : null}\n          {agendaImageSrc ? (\n            <img src={agendaImageSrc} alt=\"map\" style={{ width: '100%', height: 'auto' }} />\n          ) : null}\n        </>\n      ) : null}\n      <Button danger onClick={handleCheckOut}>\n        Check-out\n      </Button>\n      <Button type=\"link\" ghost onClick={handleDeleteActiveGuest}>\n        Go back\n      </Button>\n    </Flex>\n  );\n};\nexport default CheckInSuccess;\n","import { RenderTime } from '@/helpers';\nimport { CheckCircleOutlined, GiftOutlined } from '@ant-design/icons';\nimport { Button, Card, Flex, List, message, Modal, Tag, Tooltip, Typography } from 'antd';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useState } from 'react';\nimport { Tilt } from 'react-tilt';\nimport { confirmCheckOut, fetchCheckInInfo } from '../service';\n\ntype Props = {\n  event: EventsModule.Response;\n  callback?: (data: { action: string; data?: any }) => void;\n};\n\nconst { Title, Text } = Typography;\n\nconst tiltOptions = {\n  max: 10,\n  scale: 1.05,\n  speed: 400,\n};\n\nconst CheckOutSuccess: React.FC<Props> = ({ event, callback }) => {\n  const handleGoBack = () => {\n    //rediect back\n    if (callback) {\n      callback({ action: 'back' });\n    }\n  };\n\n  return (\n    <Flex justify=\"center\" wrap gap={'small'} vertical={true}>\n      <Tilt options={tiltOptions}>\n        <motion.div\n          initial={{ opacity: 0, scale: 0.9 }}\n          animate={{ opacity: 1, scale: 1 }}\n          transition={{ duration: 0.5 }}\n        >\n          <Card\n            style={{\n              textAlign: 'center',\n\n              borderRadius: 16,\n              overflow: 'hidden',\n              boxShadow: '0 4px 10px rgba(0, 0, 0, 0.1)',\n            }}\n          >\n            <CheckCircleOutlined style={{ fontSize: 48, color: '#52c41a' }} />\n            <Title level={3} style={{ marginTop: 16, color: '#424242' }}>\n              Check-out Successful!\n            </Title>\n            <Text type=\"secondary\" strong>\n              {event.name}\n            </Text>\n            <br />\n            <Text type=\"secondary\">{`See you in next event`}</Text>\n          </Card>\n        </motion.div>\n      </Tilt>\n      <Button type=\"link\" ghost onClick={handleGoBack}>\n        Go back\n      </Button>\n    </Flex>\n  );\n};\nexport default CheckOutSuccess;\n","import {\n  Button,\n  Card,\n  Checkbox,\n  Col,\n  Descriptions,\n  Flex,\n  Form,\n  Input,\n  List,\n  message,\n  Modal,\n  Radio,\n  Row,\n  Space,\n  Tag,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport { motion } from 'framer-motion';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Tilt } from 'react-tilt';\nimport { fetchCheckInInfo, fetchRoomDetail, sendFeedback } from '../service';\nimport { DefaultOptionType } from 'antd/es/select';\nimport { useParams } from '@umijs/max';\nimport Settings from '@/../config/defaultSettings';\nimport ENV from '@/../config/envConfig';\nimport ReCAPTCHA from 'react-google-recaptcha';\nimport TextArea from 'antd/es/input/TextArea';\n\ntype Props = {\n  event: EventsModule.Response;\n  room_id: string;\n  check_in_code: string;\n  callback?: (data: { action: string; data?: any }) => void;\n};\n\nconst { Title, Text, Paragraph } = Typography;\n\nconst FeedbackForm: React.FC<Props> = ({ event, room_id, check_in_code, callback }) => {\n  // const { formatMessage } = useIntl();\n  const [renderData, setRenderData] = useState<PublicModule.CheckInInfo>();\n  const [roomData, setRoomData] = useState<RoomsModule.Response>();\n  const [form] = Form.useForm();\n  const [errorMess, setErrorMess] = useState<string>();\n  const [loading, setLoading] = useState<boolean>(false);\n\n  //captcha\n  const SITE_KEY = ENV.reCaptchaKey;\n  const [captchaValue, setCaptchaValue] = useState<string | null>(null);\n  const recaptchaRef = useRef<ReCAPTCHA>(null);\n\n  useEffect(() => {\n    fetchCheckInInfo(check_in_code, event.id)\n      .then(({ data }) => setRenderData(data))\n      .catch((e) => {\n        localStorage.removeItem('activeGuest');\n        window.location.reload();\n      });\n  }, [check_in_code]);\n\n  useEffect(() => {\n    fetchRoomDetail(room_id).then(({ data }) => {\n      setRoomData(data);\n    });\n  }, [room_id]);\n\n  const handleDeleteActiveGuest = () => {\n    //remove in local storage\n    localStorage.removeItem('activeGuest');\n\n    //rediect back\n    if (callback) {\n      callback({ action: 'back' });\n    }\n  };\n\n  const handleCaptchaChange = (value: string | null) => {\n    setCaptchaValue(value);\n  };\n\n  //#region submit\n  const onFinish = (values) => {\n    const finalData: PublicModule.FeedbackRequest = {\n      ...values,\n      room_id,\n      check_in_code,\n    };\n\n    if (!captchaValue) {\n      message.error('Please complete the CAPTCHA');\n      return;\n    }\n\n    setErrorMess(undefined);\n    setLoading(true);\n    sendFeedback(finalData, captchaValue)\n      .then(() => {\n        setLoading(false);\n        message.success('Send feedback successful');\n        if (callback) {\n          callback({ action: 'feedback' });\n        }\n      })\n      .catch((e) => {\n        setErrorMess(e);\n        setLoading(false);\n\n        // Reset ReCAPTCHA before revalidating\n        if (recaptchaRef.current) {\n          recaptchaRef.current.reset();\n          setCaptchaValue(null);\n        }\n\n        //show error message\n        setErrorMess(e.response?.data?.message || 'Send feedback failed, please try again.');\n      });\n  };\n\n  const onFinishFailed = ({ errorFields }: any) => {\n    if (errorFields.length > 0) {\n      form.scrollToField(errorFields[0].name);\n    }\n  };\n  //#endregion\n\n  //#region service\n  const [otherValue, setOtherValue] = useState<string>('');\n\n  const serviceOption: DefaultOptionType[] = [\n    { label: 'Colocation', value: 1 },\n    { label: 'Cloud', value: 2 },\n    { label: 'Sao lưu dự phòng dữ liệu (Backup data)', value: 3 },\n    { label: 'Mạng phân phối nội dung (CDN)', value: 4 },\n    { label: 'Bảo mật, an toàn thông tin (Information security and safety)', value: 5 },\n    { label: 'Máy chủ vật lý và các thiết bị khác (Physical servers and other devices)', value: 6 },\n    { label: 'Không có nhu cầu sử dụng (No need to use)', value: 7 },\n  ];\n\n  const handleServiceInputChange = (value) => {\n    setOtherValue(value);\n  };\n  //#endregion\n\n  //#region FormLabel\n  const FormLabel: React.FC<{ vi: string; en: string; required?: boolean }> = ({\n    vi,\n    en,\n    required,\n  }) => {\n    return (\n      <Space direction=\"vertical\" size={1}>\n        <Text strong>\n          {required ? <span style={{ color: 'red' }}>* </span> : null}\n          {vi}\n        </Text>\n        <Text>{en}</Text>\n      </Space>\n    );\n  };\n  //#endregion\n\n  //#region thoughts\n  const thoughtsOption: DefaultOptionType[] = [\n    {\n      label: `Rất tốt (Very good)`,\n      value: 4,\n    },\n    {\n      label: `Tốt (Good)`,\n      value: 3,\n    },\n    {\n      label: `Bình thường (Normal)`,\n      value: 2,\n    },\n    {\n      label: `Không hài lòng (Unsatisfied) `,\n      value: 1,\n    },\n  ];\n\n  const listThought: { name: string; label: string; type: string; required?: boolean }[] = [\n    {\n      name: 'content_rating',\n      label: `Nội dung chia sẻ của các diễn giả (Content shared by speakers)`,\n      type: 'radio',\n      required: true,\n    },\n    {\n      name: 'organization_rating',\n      label: `Công tác tổ chức (phòng hội thảo, thời gian tổ chức, gian hàng, nhân sự…) Organization work (place, time, booth, personnel ...)`,\n      type: 'radio',\n      required: true,\n    },\n    {\n      name: 'other_sharing',\n      label: `Chia sẻ khác: … (tự luận) (Other sharing)`,\n      type: 'textarea',\n      required: true,\n    },\n  ];\n\n  const ThoughtForm: React.FC<{\n    name: string;\n    label: string;\n    type: string;\n    required?: boolean;\n  }> = ({ name, label, type, required }) => {\n    return (\n      <Col span={24}>\n        <Form.Item\n          name={name}\n          label={label}\n          rules={[\n            {\n              required: required,\n              pattern: /^[a-zA-ZÀ-ỹ0-9-][ a-zA-ZÀ-ỹ0-9(),.\\-_:\\n]{0,255}$/,\n              message: 'Please enter vaild content',\n            },\n          ]}\n        >\n          {type === 'radio' ? (\n            <Radio.Group style={{ width: '100%' }}>\n              <Row gutter={[16, 16]}>\n                {thoughtsOption.map((item) => (\n                  <Col key={item.value} span={24}>\n                    <Radio value={item.value}>{item.label}</Radio>\n                  </Col>\n                ))}\n              </Row>\n            </Radio.Group>\n          ) : null}\n          {type === 'textarea' ? <TextArea autoSize={{ minRows: 2 }} /> : null}\n        </Form.Item>\n      </Col>\n    );\n  };\n  //#endregion\n\n  //#region finnal render\n\n  return (\n    <Flex justify=\"center\" wrap gap={'small'} vertical={true}>\n      <Form form={form} layout=\"vertical\" onFinish={onFinish} onFinishFailed={onFinishFailed}>\n        {/* Title */}\n        <Title\n          level={3}\n          style={{ textAlign: 'center' }}\n        >{`[Feedback survey] Data Center & Cloud Infrastructure Summit 2025`}</Title>\n\n        {/* page description */}\n        <Paragraph>{`Viettel IDC trân trọng kính mời Quý vị tham gia khảo sát cho Hội nghị DCCI Summit 2025 - Green Tech, Green Future - sự kiện do Viettel IDC phối hợp với các đối tác tổ chức. Những lời góp ý của Quý vị sẽ giúp chúng tôi có thể nâng cao chất lượng hội thảo trong tương lai. Đặc biệt, nhiều phần quà hấp dẫn đang chờ đón những khách mời gửi Feedback survey tới chúng tôi. `}</Paragraph>\n        <Paragraph\n          style={{ fontStyle: 'italic' }}\n        >{`Viettel IDC cordially invites you to fill out the Feedback survey of DCCI Summit 2025 - Green Tech, Green Future - organized by Viettel IDC and partners. Your comments will help us to improve the quality of our conferences in the future. Particularly, many attractive presents are waiting for valuable respondents.`}</Paragraph>\n\n        {/* guest info */}\n\n        <Descriptions column={1} bordered size=\"small\">\n          <Descriptions.Item label=\"Mã KH của Quý khách là\">{check_in_code}</Descriptions.Item>\n          <Descriptions.Item label=\"Quý khách đang tham dự\">\n            {roomData?.name || ''}\n          </Descriptions.Item>\n          <Descriptions.Item label=\"Họ và Tên - Full Name\">\n            {renderData?.full_name || ''}\n          </Descriptions.Item>\n        </Descriptions>\n\n        {/* feedback form */}\n        <Paragraph\n          style={{ textAlign: 'center', marginTop: 25 }}\n          strong\n        >{`FEEDBACK SURVEY`}</Paragraph>\n        <Row gutter={16}>\n          <Col span={24}>\n            <FormLabel\n              vi={`1. Anh/chị có đánh giá thế nào về sự kiện ngày hôm nay?`}\n              en={`Please share your thoughts on today’s event?`}\n              required={true}\n            />\n          </Col>\n          <Col span={24}>\n            <br />\n          </Col>\n          {listThought.map((item) => (\n            <ThoughtForm\n              name={item.name}\n              label={item.label}\n              type={item.type}\n              required={item.required}\n            />\n          ))}\n          <Col span={24}>\n            <Col span={24}>\n              <Form.Item\n                name=\"attended_previous_summit\"\n                label={\n                  <FormLabel\n                    vi={`2. Anh/chị đã từng tham gia Hội nghị DCCI Summit các năm trước chưa? `}\n                    en={`Have you ever attended the DCCI Summit in previous years?`}\n                    required={true}\n                  />\n                }\n                required={false}\n                rules={[\n                  {\n                    required: true,\n                    message: 'Please select content',\n                  },\n                ]}\n              >\n                <Radio.Group style={{ width: '100%' }}>\n                  <Row gutter={[16, 16]}>\n                    <Col span={12}>\n                      <Radio value={true}>{`Đã từng/Yes`}</Radio>\n                    </Col>\n                    <Col span={12}>\n                      <Radio value={false}>{`Chưa từng/No`}</Radio>\n                    </Col>\n                  </Row>\n                </Radio.Group>\n              </Form.Item>\n            </Col>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              name=\"it_invest_annually\"\n              label={\n                <FormLabel\n                  vi={`3. Công ty của anh/chị hàng năm đầu tư ngân sách cho hạ tầng công nghệ thông tin là bao nhiêu? `}\n                  en={`Does your company invest annually in information technology infrastructure?`}\n                  required={true}\n                />\n              }\n              required={false}\n              rules={[\n                {\n                  required: true,\n                  message: 'Please select content',\n                },\n              ]}\n            >\n              <Radio.Group style={{ width: '100%' }}>\n                <Row gutter={[16, 16]}>\n                  <Col span={24}>\n                    <Radio value={1}>{`Dưới 5 tỷ đồng / Under 5 billion VND`}</Radio>\n                  </Col>\n                  <Col span={24}>\n                    <Radio\n                      value={2}\n                    >{`5 tỷ đồng < và < 10 tỷ đồng / 5 billion VND < and < 10 billion VND`}</Radio>\n                  </Col>\n                  <Col span={24}>\n                    <Radio value={3}>{`Trên 10 tỷ đồng / Over 10 billion VND`}</Radio>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              name=\"it_problem\"\n              label={\n                <FormLabel\n                  vi={`4. Công ty của anh/chị hiện có đang gặp vấn đề gì về vận hành, sử dụng hệ thống hạ tầng công nghệ thông tin?`}\n                  en={`Does your company have any problems with the operation and use of information technology infrastructure systems?`}\n                  required={true}\n                />\n              }\n              required={false}\n              rules={[\n                {\n                  required: true,\n                  pattern: /^[a-zA-ZÀ-ỹ0-9-][ a-zA-ZÀ-ỹ0-9(),.\\-_:\\n]{0,255}$/,\n                  message: 'Please enter valid content',\n                },\n              ]}\n            >\n              <TextArea autoSize={{ minRows: 2 }} />\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              name=\"service_select\"\n              label={\n                <FormLabel\n                  vi={`5. Anh/chị muốn tìm hiểu sâu hơn và trải nghiệm dịch vụ/giải pháp nào của Viettel IDC và các đối tác? `}\n                  en={`Which service/solution of Viettel IDC and our partners would you like to learn more about? Would you like to experience any service/solution of us or our partners?`}\n                  required={true}\n                />\n              }\n              required={false}\n            >\n              <Checkbox.Group>\n                <Row gutter={[8, 8]}>\n                  {serviceOption.map((item) => (\n                    <Col span={24}>\n                      <Checkbox value={item.value}>{item.label}</Checkbox>\n                    </Col>\n                  ))}\n                </Row>\n              </Checkbox.Group>\n            </Form.Item>\n            <Form.Item\n              name=\"service_order\"\n              required={false}\n              rules={[\n                ({ getFieldValue }) => ({\n                  validator(_, value) {\n                    const checkboxValue = getFieldValue('service_select');\n                    const regex = new RegExp(/^[a-zA-ZÀ-ỹ0-9-][ a-zA-ZÀ-ỹ0-9(),.\\-_:\\n]{0,255}$/);\n                    if ((!checkboxValue || checkboxValue.length < 1) && !value) {\n                      return Promise.reject(new Error('Please select or enter content '));\n                    }\n\n                    if (value && !regex.test(value)) {\n                      return Promise.reject(new Error('Please enter valid content '));\n                    }\n                    return Promise.resolve();\n                  },\n                }),\n              ]}\n            >\n              <TextArea\n                placeholder=\"Khác: (Other)\"\n                value={otherValue}\n                onChange={(e) => handleServiceInputChange(e.target.value)}\n                autoSize={{ minRows: 2 }}\n              />\n            </Form.Item>\n          </Col>\n          <Col span={24}>\n            <Form.Item\n              name=\"topic_next_summit\"\n              label={\n                <FormLabel\n                  vi={`6. Chủ đề mà anh/chị muốn nghe trong hội thảo kế tiếp của Viettel IDC? (tự luận) `}\n                  en={`What topic would you like to discover in our next events?`}\n                  required={true}\n                />\n              }\n              required={false}\n              rules={[\n                {\n                  required: true,\n                  pattern: /^[a-zA-ZÀ-ỹ0-9-][ a-zA-ZÀ-ỹ0-9(),.\\-_:\\n]{0,255}$/,\n                  message: 'Please enter valid content',\n                },\n              ]}\n            >\n              <TextArea autoSize={{ minRows: 2 }} />\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={24}>\n            <Form.Item>\n              <ReCAPTCHA ref={recaptchaRef} sitekey={SITE_KEY} onChange={handleCaptchaChange} />\n            </Form.Item>\n          </Col>\n          <Col xs={24}>\n            <Form.Item>\n              <Button\n                disabled={loading || !Boolean(captchaValue)}\n                type=\"primary\"\n                htmlType=\"submit\"\n                style={{\n                  width: '100%',\n                  backgroundColor: Boolean(captchaValue) ? Settings.colorPrimary : undefined,\n                }}\n              >\n                {`Submit`}\n              </Button>\n              {errorMess ? (\n                <div style={{ color: 'red', textAlign: 'center' }}>{errorMess}</div>\n              ) : null}\n            </Form.Item>\n          </Col>\n        </Row>\n      </Form>\n      <Button type=\"link\" ghost onClick={handleDeleteActiveGuest}>\n        Go back\n      </Button>\n    </Flex>\n  );\n};\n//#endregion\n\nexport default FeedbackForm;\n","import { useEffect, useState } from 'react';\nimport { Button, Card, Flex, Form, Input, Radio, Typography } from 'antd';\n\nimport { message } from 'antd/lib';\nimport { Helmet, useIntl, useParams } from '@umijs/max';\nimport querystring from 'query-string';\nimport Settings from '@/../config/defaultSettings';\nimport {\n  confirmCheckIn,\n  confirmCheckInRoom,\n  fetchEventDetail,\n  fetchEventListContent,\n} from './service';\nimport { CheckCircleOutlined } from '@ant-design/icons';\nimport IconFont from '@/components/IconFont';\nimport CheckInSuccess from './Result/CheckInSuccess';\nimport CheckOutSuccess from './Result/CheckOutSuccess';\nimport FeedbackForm from './components/FeedbackForm';\nimport { AssetKey } from '@/consants';\n\nconst ConfirmCheckIn: React.FC = () => {\n  const { formatMessage } = useIntl();\n  //\n  const [loading, setLoading] = useState<boolean>(false);\n  const [showResult, setShowResult] = useState<boolean>(false);\n  const [showCheckOut, setShowCheckOut] = useState<boolean>(false);\n  const [showFeedback, setShowFeedback] = useState<boolean>(false);\n\n  //get init data\n  const [checkInType, setCheckInType] = useState<'code' | 'email'>('code');\n  const [code, setCode] = useState('');\n  const [email, setEmail] = useState('');\n  const [errorMess, setErrorMess] = useState<string>();\n  const { summitId } = useParams();\n  const [eventData, setEventData] = useState<EventsModule.Response>();\n  const [activeGuest, setActiveGuest] = useState<string>();\n\n  //get room id and check-in code\n  const { room_id, check_in_code } = querystring.parse(location.search);\n\n  //asset\n  const [listAssets, setListAssets] = useState<EventsModule.AccessResponse[]>();\n  const listAssetsKey = [\n    AssetKey.CheckInSuccessAgenda,\n    AssetKey.CheckInSuccessMap,\n    AssetKey.CheckInSuccessTopBanner,\n    AssetKey.FeedbackTopBanner,\n    AssetKey.SubmiteCodeTopBanner,\n  ];\n  //\n  useEffect(() => {\n    if (summitId) {\n      // get summit data\n      fetchEventDetail(summitId).then(({ data }) => {\n        setEventData(data);\n      });\n\n      fetchEventListContent(summitId, listAssetsKey.join('|')).then(({ data }) =>\n        setListAssets(data),\n      );\n    }\n\n    // auto check in with provided code in params\n    if (check_in_code) {\n      const checkInReq: PublicModule.CheckInRequest = {\n        check_in_code,\n        summit_id: summitId || '',\n      };\n\n      onSubmit(checkInReq);\n    } else {\n      // Get the JSON string from localStorage\n      const storedGuest = localStorage.getItem('activeGuest');\n\n      // Parse it back into an object\n      if (storedGuest) {\n        //set guest data\n        setActiveGuest(storedGuest);\n\n        //check in room if there is a room id\n        if (room_id) {\n          switchComponent('feedback');\n        } else {\n          //skip to Result\n          if (checkStoredGuest(storedGuest)) {\n            checkInSuccess(storedGuest);\n          }\n        }\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    //reset error messsage when check-in type change\n    setErrorMess(undefined);\n  }, [checkInType]);\n\n  //#region switch component\n  const switchComponent = (name: string) => {\n    switch (name) {\n      case 'submit_code':\n        setShowResult(false);\n        setShowCheckOut(false);\n        setShowFeedback(false);\n        return;\n      case 'checkout_success':\n        setShowResult(false);\n        setShowCheckOut(true);\n        setShowFeedback(false);\n        return;\n      case 'feedback':\n        setShowResult(false);\n        setShowCheckOut(false);\n        setShowFeedback(true);\n        return;\n      case 'result':\n        setShowResult(true);\n        setShowCheckOut(false);\n        setShowFeedback(false);\n        return;\n\n      default:\n        return;\n    }\n  };\n  //#endregion\n\n  //#region callback\n  const callback = (data: { action: string; data?: any }) => {\n    if (data.action === 'back') {\n      switchComponent('submit_code');\n      return;\n    }\n    if (data.action === 'checkout') {\n      setActiveGuest(undefined);\n      switchComponent('checkout_success');\n      return;\n    }\n    if (data.action === 'feedback') {\n      switchComponent('result');\n      return;\n    }\n  };\n  //#endregion\n\n  //#region handle input change\n  //make only uppercase and no special characters  in the input\n  const handleInputChange = (e) => {\n    if (checkInType === 'code') {\n      const value = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, '');\n      setCode(value);\n    } else if (checkInType === 'email') {\n      const value = e.target.value;\n      const regex = new RegExp(/^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/);\n      if (!regex.test(value) && value) {\n        setErrorMess('Please enter vaild email');\n      } else {\n        setErrorMess(undefined);\n      }\n      setEmail(value);\n    }\n  };\n  //#endregion\n\n  //#region setup localstorage\n  const setCheckedGuest = (check_in_code: string) => {\n    // Get the JSON string from localStorage\n    const storedGuest = localStorage.getItem('checkedInGuest');\n    let newStoredGuest: string[] = [];\n    if (storedGuest) {\n      const parsedData: string[] = JSON.parse(storedGuest);\n      newStoredGuest = [...new Set([...(parsedData || []), check_in_code])];\n    } else {\n      newStoredGuest = [check_in_code];\n    }\n    localStorage.setItem('checkedInGuest', JSON.stringify(newStoredGuest));\n  };\n\n  const checkStoredGuest = (check_in_code: string): boolean => {\n    const storedGuest = localStorage.getItem('checkedInGuest');\n    if (storedGuest) {\n      // Convert the object to a JSON string and store it\n      const parsedData: string[] = JSON.parse(storedGuest);\n      return parsedData.includes(check_in_code);\n    }\n\n    return false;\n  };\n  //#endregion\n\n  //#region result\n  const checkInSuccess = (check_in_code: string) => {\n    localStorage.setItem('activeGuest', check_in_code);\n    setActiveGuest(check_in_code);\n    message.success('Check-in successful!');\n\n    //show feed back form if have room_id in params\n    if (room_id) {\n      switchComponent('feedback');\n    } else {\n      switchComponent('result');\n    }\n  };\n\n  const checkResult = (data: PublicModule.CheckInRespone) => {\n    if (data.is_first_time) {\n      setCheckedGuest(data.check_in_code);\n      checkInSuccess(data.check_in_code);\n    } else if (checkStoredGuest(data.check_in_code)) {\n      checkInSuccess(data.check_in_code);\n    } else {\n      message.error(`Check-in failed!`);\n    }\n  };\n  //#endregion\n\n  //#region call api\n  // const checkInRoom = (checkInRoomReq: PublicModule.CheckInRequest) => {\n  //   confirmCheckInRoom(checkInRoomReq)\n  //     .then(({ data }) => {\n  //       setLoading(false);\n  //       checkResult(data, checkInRoomReq.check_in_code);\n  //     })\n  //     .catch(() => setLoading(false));\n  // };\n\n  const checkEvent = (checkInReq: PublicModule.CheckInRequest) => {\n    confirmCheckIn(checkInReq)\n      .then(({ data }) => {\n        setLoading(false);\n        checkResult(data);\n      })\n      .catch(() => setLoading(false));\n  };\n  //#endregion\n\n  //#region submit\n\n  const onSubmit = (checkInReq: PublicModule.CheckInRequest) => {\n    setLoading(true);\n    checkEvent(checkInReq);\n\n    // if (!room_id) {\n    //   checkEvent(checkInReq);\n    // } else {\n    //   const checkInRoomReq: PublicModule.CheckInRequest = {\n    //     room_id: room_id as string,\n    //     check_in_code: checkInReq.check_in_code,\n    //   };\n    //   checkInRoom(checkInRoomReq);\n    // }\n  };\n\n  const handleSubmit = () => {\n    if (code.trim() === '' && !email) {\n      message.error('Please enter a valid check-in code or email.');\n      return;\n    }\n\n    const checkInReq: PublicModule.CheckInRequest = {\n      ...(checkInType === 'code' ? { check_in_code: code } : { email: email }),\n      summit_id: summitId || '',\n    };\n    onSubmit(checkInReq);\n  };\n  //#endregion\n\n  const Banner: React.FC = () => {\n    const asset = listAssets?.find((item) => item.key === AssetKey.SubmiteCodeTopBanner);\n    if (asset && asset.value) {\n      return <img src={asset.value} alt=\"map\" style={{ width: '100%', height: 'auto' }} />;\n    }\n    return <IconFont name=\"iconlocation\" />;\n  };\n\n  return (\n    <div>\n      <Helmet>\n        <title>\n          Confirm Check-in\n          {Settings.title && ` - ${Settings.title}`}\n        </title>\n      </Helmet>\n\n      <Flex justify=\"center\" align=\"center\">\n        <Card\n          className=\"w-full max-w-lg p-6 shadow-lg border border-gray-300 text-center\"\n          title={\n            <div className=\"flex items-center justify-center text-xl font-semibold\">\n              <CheckCircleOutlined className=\"text-green-500 mr-2\" /> Confirm Check-In\n            </div>\n          }\n          style={{ width: '100%', maxWidth: 500 }}\n          loading={loading}\n        >\n          {(!showResult || !eventData || !activeGuest) &&\n          !showResult &&\n          !showFeedback &&\n          !showCheckOut ? (\n            <Flex justify=\"center\" align=\"center\" vertical={true} wrap gap=\"middle\">\n              <Flex justify=\"center\" align=\"center\" vertical={true} wrap gap=\"small\">\n                <Banner />\n                <Typography.Title style={{ textAlign: 'center' }} level={4} className=\"mb-2\">\n                  {`Welcome to ${eventData?.name}`}\n                </Typography.Title>\n\n                <Typography.Paragraph\n                  style={{ textAlign: 'center' }}\n                  className=\"text-gray-600 mb-4\"\n                >\n                  Please enter your check-in code or registered email to confirm your attendance.\n                  Make sure to follow event policies and guidelines.\n                </Typography.Paragraph>\n              </Flex>\n\n              <Radio.Group\n                optionType=\"button\"\n                style={{ float: 'left' }}\n                value={checkInType}\n                onChange={(e) => setCheckInType(e.target.value)}\n              >\n                <Radio value={'code'}>{'Check-in code'}</Radio>\n                <Radio value={'email'}>{'Email'}</Radio>\n              </Radio.Group>\n              {checkInType === 'code' ? (\n                <Input\n                  type=\"text\"\n                  size=\"large\"\n                  placeholder=\"Enter check-in code\"\n                  value={code}\n                  onChange={handleInputChange}\n                  className=\"mb-4\"\n                  status={Boolean(errorMess) ? 'error' : undefined}\n                />\n              ) : null}\n              {checkInType === 'email' ? (\n                <Input\n                  type=\"text\"\n                  size=\"large\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={handleInputChange}\n                  className=\"mb-4\"\n                  status={Boolean(errorMess) ? 'error' : undefined}\n                />\n              ) : null}\n              <Button\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                onClick={handleSubmit}\n                className=\"w-full text-lg font-semibold h-10\"\n                style={{ width: '100%' }}\n                disabled={Boolean(errorMess) || (!email && !code)}\n              >\n                {formatMessage({ id: 'component.global.submit' })}\n              </Button>\n              {/* {Boolean(errorMess) ? (\n                <span style={{ color: 'red', marginTop: -5 }}>{errorMess}</span>\n              ) : null} */}\n            </Flex>\n          ) : null}\n          {showResult && eventData && activeGuest ? (\n            <CheckInSuccess\n              event={eventData}\n              check_in_code={activeGuest}\n              callback={callback}\n              type={room_id ? 'feedback' : 'check_in'}\n              topBannerImageSrc={\n                room_id\n                  ? listAssets?.find((item) => item.key === AssetKey.FeedbackTopBanner)?.value\n                  : listAssets?.find((item) => item.key === AssetKey.CheckInSuccessTopBanner)?.value\n              }\n              mapImageSrc={\n                listAssets?.find((item) => item.key === AssetKey.CheckInSuccessMap)?.value\n              }\n              agendaImageSrc={\n                listAssets?.find((item) => item.key === AssetKey.CheckInSuccessAgenda)?.value\n              }\n            />\n          ) : null}\n          {showCheckOut && eventData ? (\n            <CheckOutSuccess event={eventData} callback={callback} />\n          ) : null}\n          {showFeedback && eventData && activeGuest ? (\n            <FeedbackForm\n              event={eventData}\n              check_in_code={activeGuest}\n              callback={callback}\n              room_id={room_id as string}\n            />\n          ) : null}\n        </Card>\n      </Flex>\n    </div>\n  );\n};\n\nexport default ConfirmCheckIn;\n"],"names":[],"mappings":"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"}