{"version":3,"sources":["src/pages/Events/Detail.tsx"],"sourcesContent":["import React, { CSSProperties, useEffect, useState } from 'react';\nimport * as Highcharts from 'highcharts/highstock';\nimport HighchartsReact from 'highcharts-react-official';\nimport { useIntl, useParams } from '@umijs/max';\nimport {\n  fetchItem,\n  fetchRangeTotalValues,\n  fetchTotalCheckIn,\n  fetchTotalCheckOut,\n  fetchTotalMailSent,\n  fetchTotalRegistered,\n  fetchTotalRegisteredByGuestGroup,\n  TotalRegisteredByGuestGroup,\n} from './service';\nimport { PageContainer } from '@ant-design/pro-components';\nimport {\n  Breadcrumb,\n  Card,\n  Col,\n  DatePicker,\n  Row,\n  Skeleton,\n  Space,\n  TimeRangePickerProps,\n  Typography,\n} from 'antd';\nimport {\n  FormatInputTime,\n  getTimeNowStartOfDay,\n  getTimeOneMonthLaterStartOfDay,\n  transformToLineChartSeries,\n  transformTimestampToDayjs,\n} from '@/helpers';\nimport { RangeValueType } from 'rc-picker/lib/PickerInput/RangePicker';\nimport dayjs, { Dayjs } from 'dayjs';\n\nconst { RangePicker } = DatePicker;\nconst { Title } = Typography;\n\nconst Detail: React.FC = () => {\n  //#region init\n  const { formatMessage } = useIntl();\n  const { id } = useParams();\n\n  const [data, setData] = useState<EventsModule.Response>();\n  const [loading, setLoading] = useState(false);\n\n  //req\n  const DEFAULT_START_TIME = getTimeNowStartOfDay();\n  const DEFAULT_END_TIME = getTimeOneMonthLaterStartOfDay();\n  const MAX_RANGE_DAYS = 100;\n  const [rangeValue, setRangeValue] = useState<RangeValueType<dayjs.Dayjs>>([\n    DEFAULT_START_TIME,\n    DEFAULT_END_TIME,\n  ]);\n\n  useEffect(() => {\n    if (id) {\n      setLoading(true);\n      fetchItem(id)\n        .then((res) => {\n          setData(res);\n          setRangeValue([\n            transformTimestampToDayjs(res.start_time),\n            transformTimestampToDayjs(res.end_time),\n          ]);\n          setLoading(false);\n        })\n        .catch(() => setLoading(false));\n    }\n  }, [id]);\n  //#endregion\n\n  // Summary statistics\n  //#region total registered\n  const [totalRegistered, setTotalRegistered] = useState<number>(0);\n  const [totalRegisteredLoading, setTotalRegisteredLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const req = getReqBody(rangeValue);\n    if (data && req) {\n      setTotalRegisteredLoading(true);\n      fetchTotalRegistered(data.id, req.start_time, req.end_time)\n        .then((data) => {\n          setTotalRegistered(data);\n          setTotalRegisteredLoading(false);\n        })\n        .catch(() => setTotalRegisteredLoading(false));\n    }\n  }, [data, rangeValue]);\n  //#endregion\n\n  //#region total mail sent\n  const [totalMailSent, setTotalMailSent] = useState<number>(0);\n  const [totalMailSentLoading, setTotalMailSentLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const req = getReqBody(rangeValue);\n    if (data && req) {\n      setTotalMailSentLoading(true);\n      fetchTotalMailSent(data.id, req.start_time, req.end_time)\n        .then((data) => {\n          setTotalMailSent(data);\n          setTotalMailSentLoading(false);\n        })\n        .catch(() => setTotalMailSentLoading(false));\n    }\n  }, [data, rangeValue]);\n  //#endregion\n  //#region total check in\n  const [totalCheckIn, setTotalCheckIn] = useState<number>(0);\n  const [totalCheckInLoading, setTotalCheckInLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const req = getReqBody(rangeValue);\n    if (data && req) {\n      setTotalCheckInLoading(true);\n      fetchTotalCheckIn(data.id, req.start_time, req.end_time)\n        .then((data) => {\n          setTotalCheckIn(data);\n          setTotalCheckInLoading(false);\n        })\n        .catch(() => setTotalCheckInLoading(false));\n    }\n  }, [data, rangeValue]);\n  //#endregion\n  //#region total check out\n  const [totalCheckOut, setTotalCheckOut] = useState<number>(0);\n  const [totalCheckOutLoading, setTotalCheckOutLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const req = getReqBody(rangeValue);\n    if (data && req) {\n      setTotalCheckOutLoading(true);\n      fetchTotalCheckOut(data.id, req.start_time, req.end_time)\n        .then((data) => {\n          setTotalCheckOut(data);\n          setTotalCheckOutLoading(false);\n        })\n        .catch(() => setTotalCheckOutLoading(false));\n    }\n  }, [data, rangeValue]);\n  //#endregion\n\n  //#region range total values\n  const [rangeTotalValues, setRangeTotalValues] = useState<Highcharts.Options['series']>([]);\n  const [rangeTotalValuesLoading, setRangeTotalValuesLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    const req = getReqBody(rangeValue);\n    if (data && req) {\n      setRangeTotalValuesLoading(true);\n      fetchRangeTotalValues(data.id, req.start_time, req.end_time)\n        .then((data) => {\n          if (data) {\n            setRangeTotalValues(transformToLineChartSeries(data, 1));\n          }\n          setRangeTotalValuesLoading(false);\n        })\n        .catch(() => setRangeTotalValuesLoading(false));\n    }\n  }, [data, rangeValue]);\n\n  //#endregion\n\n  //#region range total values\n  const [totalRegisteredByGuestGroup, setTotalRegisteredByGuestGroup] = useState<\n    Highcharts.Options['series']\n  >([]);\n  const [totalRegisteredByGuestGroupLoading, setTotalRegisteredByGuestGroupLoading] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    const req = getReqBody(rangeValue);\n    if (data && req) {\n      setTotalRegisteredByGuestGroupLoading(true);\n      fetchTotalRegisteredByGuestGroup(data.id, req.start_time, req.end_time)\n        .then((data) => {\n          if (data) {\n            setTotalRegisteredByGuestGroup(transformResTotalRegisteredByGuestGroupData(data));\n          }\n          setTotalRegisteredByGuestGroupLoading(false);\n        })\n        .catch(() => setTotalRegisteredByGuestGroupLoading(false));\n    }\n  }, [data, rangeValue]);\n\n  const transformResTotalRegisteredByGuestGroupData = (data: TotalRegisteredByGuestGroup[]) => {\n    let pointData: [string, number][] = [];\n    data.forEach((item) => {\n      pointData.push([item.name, item.total_guest_registered]);\n    });\n    let series: Highcharts.Options['series'] = [\n      {\n        type: 'column',\n        name: 'Registrations',\n        data: pointData,\n        colorByPoint: true,\n      },\n    ];\n\n    return series;\n  };\n\n  //#endregion\n\n  const getReqBody = (rangeValue) => {\n    if (!rangeValue) return false;\n    if (!rangeValue[0]) return false;\n    if (!rangeValue[1]) return false;\n    return {\n      start_time: FormatInputTime(dayjs(rangeValue[0]).startOf('day')) as number,\n      end_time: FormatInputTime(dayjs(rangeValue[1]).add(1, 'day').startOf('day')) as number,\n    };\n  };\n\n  //#region chart option\n  // Line Chart Configuration\n  const lineChartOptions = {\n    chart: { type: 'line', zoomType: 'x', panning: true, panKey: 'shift' },\n    title: { text: 'Email Sent & Guest Registrations Over Time' },\n    xAxis: { type: 'datetime', title: { text: 'Time' } },\n    yAxis: { title: { text: 'Count' } },\n    series: rangeTotalValues,\n    tooltip: {\n      shared: true,\n      crosshairs: true,\n    },\n    time: {\n      useUTC: false,\n    },\n  };\n\n  // Pie Chart (Check-in % vs Registered Guest %)\n  const checkInPieOptions: Highcharts.Options = {\n    chart: { type: 'pie' },\n    title: { text: 'Check-in % of Registered Guest' },\n    colors: ['#3498db', '#e74c3c'],\n    series: [\n      {\n        name: 'Guest',\n        type: 'pie',\n        data: [\n          { name: 'Checked-in', y: totalCheckIn },\n          { name: 'Not Checked-in', y: totalRegistered - totalCheckIn },\n        ],\n      },\n    ],\n  };\n\n  // Pie Chart (Check-out % of Checked-in Guest)\n  const checkOutPieOptions: Highcharts.Options = {\n    chart: { type: 'pie' },\n    title: { text: 'Check-out % of Checked-in Guest' },\n    colors: ['#f39c12', '#2ecc71'], // Orange for Checked-out, Green for Still Checked-in\n    series: [\n      {\n        name: 'Users',\n        type: 'pie',\n        data: [\n          { name: 'Checked-out', y: totalCheckOut },\n          { name: 'Still Checked-in', y: totalCheckIn - totalCheckOut },\n        ],\n      },\n    ],\n  };\n\n  // Column Chart (Guest Registrations by Source)\n  const columnChartOptions: Highcharts.Options = {\n    chart: { type: 'column' },\n    title: { text: 'Guest Registrations by Group' },\n    xAxis: { type: 'category' },\n    yAxis: { title: { text: 'Number of Guests' } },\n    series: totalRegisteredByGuestGroup,\n    legend: { enabled: false },\n  };\n\n  //#endregion\n\n  //#region range setting\n  const rangePresets: TimeRangePickerProps['presets'] = [\n    { label: 'Last Day', value: [dayjs().startOf('day').add(-1, 'd'), dayjs().startOf('day')] },\n    { label: 'Last 7 Days', value: [dayjs().startOf('day').add(-7, 'd'), dayjs().startOf('day')] },\n    {\n      label: 'Last 14 Days',\n      value: [\n        dayjs().startOf('day').startOf('day').add(-14, 'd'),\n        dayjs().startOf('day').startOf('day'),\n      ],\n    },\n    {\n      label: 'Last 30 Days',\n      value: [\n        dayjs().startOf('day').startOf('day').add(-30, 'd'),\n        dayjs().startOf('day').startOf('day'),\n      ],\n    },\n    {\n      label: 'Last 90 Days',\n      value: [\n        dayjs().startOf('day').startOf('day').add(-90, 'd'),\n        dayjs().startOf('day').startOf('day'),\n      ],\n    },\n  ];\n\n  const disabledDate = (current: Dayjs) => {\n    if (!rangeValue) return false;\n    if (!rangeValue[0]) return false;\n\n    // Prevent selecting the same start and end date\n    // if (rangeValue[0].isSame(current, 'day')) return true;\n\n    // Prevent selecting a date beyond the max range (100 days)\n    const maxEndDate = rangeValue[0].add(MAX_RANGE_DAYS, 'day');\n    return current.isAfter(maxEndDate, 'day');\n  };\n  //#endregion\n\n  const CardStyle: CSSProperties = {\n    maxHeight: 146,\n  };\n\n  //#region breadcrumb\n  const CustomBreadcrumb = () => {\n    return (\n      <Breadcrumb>\n        <Breadcrumb.Item href=\"/events\">{formatMessage({ id: 'menu.events' })}</Breadcrumb.Item>\n        <Breadcrumb.Item>{data?.name}</Breadcrumb.Item>\n      </Breadcrumb>\n    );\n  };\n  //#endregion\n\n  //#region finnal render\n  return (\n    <PageContainer\n      title={\n        <Space direction=\"horizontal\" size={'large'}>\n          <Title level={4}>{data?.name}</Title>\n          <RangePicker\n            style={{ marginTop: -10, display: 'flex' }}\n            value={rangeValue}\n            onChange={(value) => setRangeValue(value as RangeValueType<dayjs.Dayjs>)}\n            disabledDate={disabledDate}\n            presets={rangePresets}\n          />\n        </Space>\n      }\n      breadcrumbRender={() => <CustomBreadcrumb />}\n      loading={loading}\n    >\n      <div style={{ padding: '20px' }}>\n        {/* Stats Cards */}\n        <Row gutter={[16, 16]}>\n          <Col xs={24} md={12} lg={6}>\n            <Card\n              title=\"Registered Users\"\n              bordered={false}\n              loading={totalRegisteredLoading}\n              style={CardStyle}\n            >\n              <h2>{totalRegistered}</h2>\n            </Card>\n          </Col>\n          <Col xs={24} md={12} lg={6}>\n            <Card\n              title=\"Emails Sent\"\n              bordered={false}\n              loading={totalMailSentLoading}\n              style={CardStyle}\n            >\n              <h2>{totalMailSent}</h2>\n            </Card>\n          </Col>\n          <Col xs={24} md={12} lg={6}>\n            <Card\n              title=\"Check-ins\"\n              bordered={false}\n              loading={totalCheckInLoading}\n              style={CardStyle}\n            >\n              <h2>{totalCheckIn}</h2>\n            </Card>\n          </Col>\n          <Col xs={24} md={12} lg={6}>\n            <Card\n              title=\"Check-outs\"\n              bordered={false}\n              loading={totalCheckOutLoading}\n              style={CardStyle}\n            >\n              <h2>{totalCheckOut}</h2>\n            </Card>\n          </Col>\n        </Row>\n\n        {/* Top Charts: Line & Pie */}\n        <Row gutter={16} style={{ marginTop: '20px' }}>\n          <Col xs={24} lg={16}>\n            {rangeTotalValuesLoading ? <Skeleton /> : null}\n            {!rangeTotalValuesLoading ? (\n              <HighchartsReact highcharts={Highcharts} options={lineChartOptions} />\n            ) : null}\n          </Col>\n          <Col xs={24} lg={8}>\n            {totalCheckInLoading || totalRegisteredLoading ? <Skeleton /> : null}\n            {!totalCheckInLoading && !totalRegisteredLoading ? (\n              <HighchartsReact highcharts={Highcharts} options={checkInPieOptions} />\n            ) : null}\n          </Col>\n        </Row>\n\n        {/* Bottom Charts: Pie & Column */}\n        <Row gutter={16} style={{ marginTop: '20px' }}>\n          <Col xs={24} lg={12}>\n            {totalCheckInLoading || totalCheckOutLoading ? <Skeleton /> : null}\n            {!totalCheckInLoading && !totalCheckOutLoading ? (\n              <HighchartsReact highcharts={Highcharts} options={checkOutPieOptions} />\n            ) : null}\n          </Col>\n          <Col xs={24} lg={12}>\n            {totalRegisteredByGuestGroupLoading ? <Skeleton /> : null}\n            {!totalRegisteredByGuestGroupLoading ? (\n              <HighchartsReact highcharts={Highcharts} options={columnChartOptions} />\n            ) : null}\n          </Col>\n        </Row>\n      </div>\n    </PageContainer>\n  );\n};\n\nexport default Detail;\n"],"names":[],"mappings":"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"}